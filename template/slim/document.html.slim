doctype html
html lang=(attr :lang, 'en' unless attr? :nolang)
  head
      meta charset="utf-8"
      - [:description, :keywords, :author, :copyright].each do |key|
        - if attr? key
          meta name=key content=(attr key)
      title=(doctitle sanitize: true, use_fallback: true)
      meta content="yes" name="apple-mobile-web-app-capable"
      meta content="black-translucent" name="apple-mobile-web-app-status-bar-style"
      meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui" name="viewport"
      link href="asciidoctor.css" rel="stylesheet"
      / Default theme required even when using custom theme
      - if attr? :stem
        - asset_uri_scheme = (attr 'asset-uri-scheme', 'https')
        - asset_uri_scheme = %(#{asset_uri_scheme}:) unless asset_uri_scheme.empty?
        - cdn_base = %(#{asset_uri_scheme}//cdnjs.cloudflare.com/ajax/libs)
        - eqnums_val = (attr 'eqnums', 'none')
        - eqnums_val = 'AMS' if eqnums_val == ''
        - eqnums_opt = %( equationNumbers: { autoNumber: "#{eqnums_val}" } )
        script type='text/x-mathjax-config'
          | MathJax.Hub.Config({
            tex2jax: {
              inlineMath: [#{Asciidoctor::INLINE_MATH_DELIMITERS[:latexmath].to_s}],
              displayMath: [#{Asciidoctor::BLOCK_MATH_DELIMITERS[:latexmath].to_s}],
              ignoreClass: "nostem|nolatexmath"
            },
            asciimath2jax: {
              delimiters: [#{Asciidoctor::BLOCK_MATH_DELIMITERS[:asciimath].to_s}],
              ignoreClass: "nostem|noasciimath"
            },
            TeX: {#{eqnums_opt}}
            });
        script src='#{cdn_base}/mathjax/2.4.0/MathJax.js?config=TeX-MML-AM_HTMLorMML'
      - case attr 'source-highlighter'
      - when 'coderay'
        - if (attr 'coderay-css', 'class') == 'class'
          - if @safe >= Asciidoctor::SafeMode::SECURE || (attr? :linkcss)
            link rel='stylesheet' href=normalize_web_path('asciidoctor-coderay.css', (attr :stylesdir, ''))
          - else
            style=Asciidoctor::Stylesheets.instance.coderay_stylesheet_data
      - when 'pygments'
        - if (attr 'pygments-css', 'class') == 'class'
          - if @safe >= Asciidoctor::SafeMode::SECURE || (attr? :linkcss)
            link rel='stylesheet' href=normalize_web_path('asciidoctor-pygments.css', (attr :stylesdir, ''))
          - else
            style=Asciidoctor::Stylesheets.instance.pygments_stylesheet_data(attr 'pygments-style')
      / For syntax highlighting
      - if attr? 'highlightjs-theme'
        link href=(attr 'highlightjs-theme') rel="stylesheet"
      - else
        link href="lib/css/zenburn.css" rel="stylesheet"
      / If the query includes 'print-pdf', use the PDF print sheet
      javascript:
        document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
      - unless (docinfo_content = docinfo :header, '.html').empty?
        =docinfo_content
  body
    div style="background-color: black; width: 100%; height: 70px;"
      span style="color: white; font-size: 24pt; margin-top: 20px; margin-left: 20px;"
        | My Documentation Website
      br
      span style="color: white; font-size: 14pt; margin-top: 20px; margin-left: 20px;"
        | This header. Edit this in the template.


    div style="float: left; background-color: silver; width: 20%; padding-left: 10px; height: 900px;"
      | <br>
      ul
        li.first: a[href="/a"] link
        li: a[href="/b"] link
        p This is column one. Edit this in the template.


    div style="float: left; width: 60%; padding: 20px;" =content

    div style="float: left; background-color: gray; width: 20%; padding-left: 10px; height: 900px;"
      | <br>
      ul
        li.first: a[href="/a"] link
        li: a[href="/b"] link
        p This is column three. Edit this in the template.

    br clear="all"

    div id="footer"
      | 2015 - Ted Bergeron - Edit this in the template.
